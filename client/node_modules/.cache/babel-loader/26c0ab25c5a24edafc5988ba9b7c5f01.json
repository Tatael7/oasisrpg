{"ast":null,"code":"import _classCallCheck from \"/Users/armandoochoa/oasisrpg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/armandoochoa/oasisrpg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/armandoochoa/oasisrpg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/armandoochoa/oasisrpg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/armandoochoa/oasisrpg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/armandoochoa/oasisrpg/client/src/components/PaymentOptions/index.js\";\nimport { CardForm, BankForm, PaymentMethods } from 'react-payment';\nimport React, { Component } from 'react';\nimport Dialog from 'material-ui/Dialog';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport server from './server';\nvar loadedStripe = false;\n\nvar PaymentOptions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PaymentOptions, _Component);\n\n  function PaymentOptions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PaymentOptions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PaymentOptions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      dialogOpen: false,\n      cardDialog: true\n    };\n\n    _this.openDialog = function (type) {\n      _this.setState({\n        dialogOpen: true,\n        cardDialog: type === 'card' ? true : false\n      });\n    };\n\n    _this.closeDialog = function () {\n      _this.setState({\n        dialogOpen: false\n      });\n    };\n\n    _this.removeCard = function (id) {\n      server.removeCard(id);\n    };\n\n    _this.removeBank = function (id) {\n      server.removeBankAccount(id);\n    };\n\n    _this.onSubmitCard = function (card) {\n      var number = card.number,\n          exp_month = card.exp_month,\n          exp_year = card.exp_year,\n          cvc = card.cvc,\n          name = card.name,\n          zip = card.zip;\n      Stripe.card.createToken({\n        number: number,\n        exp_month: exp_month,\n        exp_year: exp_year,\n        cvc: cvc,\n        name: name,\n        address_zip: zip\n      }, function (status, response) {\n        if (response.error) {\n          alert('Adding card failed with error: ' + response.error.message);\n        } else {\n          var cardToken = response.id;\n          server.saveCard(cardToken);\n\n          _this.closeDialog(); // show success message\n\n        }\n      });\n    };\n\n    _this.onSubmitBank = function (account) {\n      var name = account.name,\n          accountNumber = account.accountNumber,\n          routingNumber = account.routingNumber,\n          accountType = account.accountType;\n      var account_holder_type = accountType === 'personal' ? 'individual' : 'company';\n      Stripe.bankAccount.createToken({\n        country: 'US',\n        currency: 'USD',\n        routing_number: routingNumber,\n        account_number: accountNumber,\n        account_holder_name: name,\n        account_holder_type: account_holder_type\n      }, function (status, response) {\n        if (response.error) {\n          alert('Adding bank account failed with error: ' + response.error.message);\n        } else {\n          var bankAccountToken = response.id;\n          server.saveBankAccount(bankAccountToken);\n\n          _this.closeDialog(); // show success message\n\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PaymentOptions, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (loadedStripe) {\n        return;\n      }\n\n      var script = document.createElement(\"script\");\n      script.src = \"https://js.stripe.com/v2/\";\n      script.type = \"text/javascript\";\n      script.async = true;\n\n      script.onload = function () {\n        Stripe.setPublishableKey('pk_test_6pRNASCoBOKtIshFeQd4XMUh');\n      };\n\n      document.body.appendChild(script);\n      loadedStripe = true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var title = this.state.cardDialog ? 'Add credit card' : 'Add bank account';\n      return React.createElement(MuiThemeProvider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(PaymentMethods, {\n        showCards: true,\n        showBanks: true,\n        cards: [{\n          id: '1',\n          last4: '1234',\n          brand: 'visa'\n        }],\n        banks: [],\n        onAddCard: function onAddCard() {\n          return _this2.openDialog('card');\n        },\n        onAddBank: function onAddBank() {\n          return _this2.openDialog('bank');\n        },\n        onRemoveCard: this.removeCard,\n        onRemoveBank: this.removeBank,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(Dialog, {\n        title: title,\n        modal: false,\n        open: this.state.dialogOpen,\n        onRequestClose: this.closeDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, this.state.cardDialog ? React.createElement(CardForm, {\n        onSubmit: this.onSubmitCard,\n        getName: true,\n        getZip: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }) : React.createElement(BankForm, {\n        onSubmit: this.onSubmitBank,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PaymentOptions;\n}(Component);\n\nexport { PaymentOptions as default };","map":{"version":3,"sources":["/Users/armandoochoa/oasisrpg/client/src/components/PaymentOptions/index.js"],"names":["CardForm","BankForm","PaymentMethods","React","Component","Dialog","MuiThemeProvider","server","loadedStripe","PaymentOptions","state","dialogOpen","cardDialog","openDialog","type","setState","closeDialog","removeCard","id","removeBank","removeBankAccount","onSubmitCard","card","number","exp_month","exp_year","cvc","name","zip","Stripe","createToken","address_zip","status","response","error","alert","message","cardToken","saveCard","onSubmitBank","account","accountNumber","routingNumber","accountType","account_holder_type","bankAccount","country","currency","routing_number","account_number","account_holder_name","bankAccountToken","saveBankAccount","script","document","createElement","src","async","onload","setPublishableKey","body","appendChild","title","last4","brand"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,cAA7B,QAAmD,eAAnD;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,IAAIC,YAAY,GAAG,KAAnB;;IAEqBC,c;;;;;;;;;;;;;;;;;UAEnBC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE,KADN;AAENC,MAAAA,UAAU,EAAE;AAFN,K;;UAsBRC,U,GAAa,UAACC,IAAD,EAAU;AACrB,YAAKC,QAAL,CAAc;AACZJ,QAAAA,UAAU,EAAE,IADA;AAEZC,QAAAA,UAAU,EAAEE,IAAI,KAAK,MAAT,GAAkB,IAAlB,GAAyB;AAFzB,OAAd;AAID,K;;UAEDE,W,GAAc,YAAM;AAClB,YAAKD,QAAL,CAAc;AAACJ,QAAAA,UAAU,EAAE;AAAb,OAAd;AACD,K;;UAEDM,U,GAAa,UAACC,EAAD,EAAQ;AACnBX,MAAAA,MAAM,CAACU,UAAP,CAAkBC,EAAlB;AACD,K;;UAEDC,U,GAAa,UAACD,EAAD,EAAQ;AACnBX,MAAAA,MAAM,CAACa,iBAAP,CAAyBF,EAAzB;AACD,K;;UAEDG,Y,GAAe,UAACC,IAAD,EAAU;AAAA,UACfC,MADe,GACiCD,IADjC,CACfC,MADe;AAAA,UACPC,SADO,GACiCF,IADjC,CACPE,SADO;AAAA,UACIC,QADJ,GACiCH,IADjC,CACIG,QADJ;AAAA,UACcC,GADd,GACiCJ,IADjC,CACcI,GADd;AAAA,UACmBC,IADnB,GACiCL,IADjC,CACmBK,IADnB;AAAA,UACyBC,GADzB,GACiCN,IADjC,CACyBM,GADzB;AAEvBC,MAAAA,MAAM,CAACP,IAAP,CAAYQ,WAAZ,CAAwB;AACtBP,QAAAA,MAAM,EAANA,MADsB;AAEtBC,QAAAA,SAAS,EAATA,SAFsB;AAGtBC,QAAAA,QAAQ,EAARA,QAHsB;AAItBC,QAAAA,GAAG,EAAHA,GAJsB;AAKtBC,QAAAA,IAAI,EAAJA,IALsB;AAMtBI,QAAAA,WAAW,EAAEH;AANS,OAAxB,EAOG,UAACI,MAAD,EAASC,QAAT,EAAsB;AACvB,YAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClBC,UAAAA,KAAK,CAAC,oCAAoCF,QAAQ,CAACC,KAAT,CAAeE,OAApD,CAAL;AACD,SAFD,MAEO;AACL,cAAMC,SAAS,GAAGJ,QAAQ,CAACf,EAA3B;AACAX,UAAAA,MAAM,CAAC+B,QAAP,CAAgBD,SAAhB;;AACA,gBAAKrB,WAAL,GAHK,CAIL;;AACD;AACF,OAhBD;AAiBD,K;;UAEDuB,Y,GAAe,UAACC,OAAD,EAAa;AAAA,UAClBb,IADkB,GACkCa,OADlC,CAClBb,IADkB;AAAA,UACZc,aADY,GACkCD,OADlC,CACZC,aADY;AAAA,UACGC,aADH,GACkCF,OADlC,CACGE,aADH;AAAA,UACkBC,WADlB,GACkCH,OADlC,CACkBG,WADlB;AAE1B,UAAMC,mBAAmB,GAAGD,WAAW,KAAK,UAAhB,GAA6B,YAA7B,GAA4C,SAAxE;AAEAd,MAAAA,MAAM,CAACgB,WAAP,CAAmBf,WAAnB,CAA+B;AAC7BgB,QAAAA,OAAO,EAAE,IADoB;AAE7BC,QAAAA,QAAQ,EAAE,KAFmB;AAG7BC,QAAAA,cAAc,EAAEN,aAHa;AAI7BO,QAAAA,cAAc,EAAER,aAJa;AAK7BS,QAAAA,mBAAmB,EAAEvB,IALQ;AAM7BiB,QAAAA,mBAAmB,EAAnBA;AAN6B,OAA/B,EAOG,UAACZ,MAAD,EAASC,QAAT,EAAsB;AACvB,YAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClBC,UAAAA,KAAK,CAAC,4CAA4CF,QAAQ,CAACC,KAAT,CAAeE,OAA5D,CAAL;AACD,SAFD,MAEO;AACL,cAAMe,gBAAgB,GAAGlB,QAAQ,CAACf,EAAlC;AACAX,UAAAA,MAAM,CAAC6C,eAAP,CAAuBD,gBAAvB;;AACA,gBAAKnC,WAAL,GAHK,CAIL;;AACD;AACF,OAhBD;AAiBD,K;;;;;;;yCA9EoB;AACnB,UAAIR,YAAJ,EAAkB;AAChB;AACD;;AAED,UAAM6C,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,MAAAA,MAAM,CAACG,GAAP,GAAa,2BAAb;AACAH,MAAAA,MAAM,CAACvC,IAAP,GAAc,iBAAd;AACAuC,MAAAA,MAAM,CAACI,KAAP,GAAe,IAAf;;AACAJ,MAAAA,MAAM,CAACK,MAAP,GAAgB,YAAM;AACpB7B,QAAAA,MAAM,CAAC8B,iBAAP,CAAyB,kCAAzB;AACD,OAFD;;AAGAL,MAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0BR,MAA1B;AAEA7C,MAAAA,YAAY,GAAG,IAAf;AACD;;;6BAiEQ;AAAA;;AACP,UAAMsD,KAAK,GAAG,KAAKpD,KAAL,CAAWE,UAAX,GAAwB,iBAAxB,GAA4C,kBAA1D;AAEA,aACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AACE,QAAA,SAAS,EAAE,IADb;AAEE,QAAA,SAAS,EAAE,IAFb;AAGE,QAAA,KAAK,EAAE,CAAC;AAAEM,UAAAA,EAAE,EAAE,GAAN;AAAW6C,UAAAA,KAAK,EAAE,MAAlB;AAA0BC,UAAAA,KAAK,EAAE;AAAjC,SAAD,CAHT;AAIE,QAAA,KAAK,EAAE,EAJT;AAKE,QAAA,SAAS,EAAE;AAAA,iBAAM,MAAI,CAACnD,UAAL,CAAgB,MAAhB,CAAN;AAAA,SALb;AAME,QAAA,SAAS,EAAE;AAAA,iBAAM,MAAI,CAACA,UAAL,CAAgB,MAAhB,CAAN;AAAA,SANb;AAOE,QAAA,YAAY,EAAE,KAAKI,UAPrB;AAQE,QAAA,YAAY,EAAE,KAAKE,UARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAWE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAE2C,KADT;AAEE,QAAA,KAAK,EAAE,KAFT;AAGE,QAAA,IAAI,EAAE,KAAKpD,KAAL,CAAWC,UAHnB;AAIE,QAAA,cAAc,EAAE,KAAKK,WAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,KAAKN,KAAL,CAAWE,UAAX,GACA,oBAAC,QAAD;AACE,QAAA,QAAQ,EAAE,KAAKS,YADjB;AAEE,QAAA,OAAO,EAAE,IAFX;AAGE,QAAA,MAAM,EAAE,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,GAOA,oBAAC,QAAD;AACE,QAAA,QAAQ,EAAE,KAAKkB,YADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,CAXF,CADF;AAiCD;;;;EA3HyCnC,S;;SAAvBK,c","sourcesContent":["import { CardForm, BankForm, PaymentMethods } from 'react-payment';\nimport React, { Component } from 'react'\nimport Dialog from 'material-ui/Dialog';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n \nimport server from './server';\n \nlet loadedStripe = false;\n \nexport default class PaymentOptions extends Component {\n \n  state = {\n    dialogOpen: false,\n    cardDialog: true\n  };\n \n  componentWillMount() {\n    if (loadedStripe) {\n      return;\n    }\n \n    const script = document.createElement(\"script\");\n    script.src = \"https://js.stripe.com/v2/\";\n    script.type = \"text/javascript\";\n    script.async = true;\n    script.onload = () => {\n      Stripe.setPublishableKey('pk_test_6pRNASCoBOKtIshFeQd4XMUh');\n    };\n    document.body.appendChild(script);\n \n    loadedStripe = true;\n  }\n \n  openDialog = (type) => {\n    this.setState({\n      dialogOpen: true,\n      cardDialog: type === 'card' ? true : false\n    });\n  };\n \n  closeDialog = () => {\n    this.setState({dialogOpen: false});\n  };\n \n  removeCard = (id) => {\n    server.removeCard(id);\n  };\n \n  removeBank = (id) => {\n    server.removeBankAccount(id);\n  };\n \n  onSubmitCard = (card) => {\n    const { number, exp_month, exp_year, cvc, name, zip } = card;\n    Stripe.card.createToken({\n      number,\n      exp_month,\n      exp_year,\n      cvc,\n      name,\n      address_zip: zip\n    }, (status, response) => {\n      if (response.error) {\n        alert('Adding card failed with error: ' + response.error.message)\n      } else {\n        const cardToken = response.id;\n        server.saveCard(cardToken);\n        this.closeDialog();\n        // show success message\n      }\n    });\n  };\n \n  onSubmitBank = (account) => {\n    const { name, accountNumber, routingNumber, accountType } = account;\n    const account_holder_type = accountType === 'personal' ? 'individual' : 'company';\n \n    Stripe.bankAccount.createToken({\n      country: 'US',\n      currency: 'USD',\n      routing_number: routingNumber,\n      account_number: accountNumber,\n      account_holder_name: name,\n      account_holder_type\n    }, (status, response) => {\n      if (response.error) {\n        alert('Adding bank account failed with error: ' + response.error.message);\n      } else {\n        const bankAccountToken = response.id;\n        server.saveBankAccount(bankAccountToken);\n        this.closeDialog();\n        // show success message\n      }\n    })\n  };\n \n  render() {\n    const title = this.state.cardDialog ? 'Add credit card' : 'Add bank account';\n \n    return (\n      <MuiThemeProvider>\n        <PaymentMethods\n          showCards={true}\n          showBanks={true}\n          cards={[{ id: '1', last4: '1234', brand: 'visa' }]}\n          banks={[]}\n          onAddCard={() => this.openDialog('card')}\n          onAddBank={() => this.openDialog('bank')}\n          onRemoveCard={this.removeCard}\n          onRemoveBank={this.removeBank}\n          />\n        <Dialog\n          title={title}\n          modal={false}\n          open={this.state.dialogOpen}\n          onRequestClose={this.closeDialog}\n        >\n          {\n            this.state.cardDialog ?\n            <CardForm\n              onSubmit={this.onSubmitCard}\n              getName={true}\n              getZip={true}\n            />\n            :\n            <BankForm\n              onSubmit={this.onSubmitBank}\n            />\n          }\n        </Dialog>\n      </MuiThemeProvider>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}