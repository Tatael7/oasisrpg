{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createChildFragment = createChildFragment;\nexports.extendChildren = extendChildren;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactAddonsCreateFragment = require('react-addons-create-fragment');\n\nvar _reactAddonsCreateFragment2 = _interopRequireDefault(_reactAddonsCreateFragment);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction createChildFragment(fragments) {\n  var newFragments = {};\n  var validChildrenCount = 0;\n  var firstKey = void 0; // Only create non-empty key fragments\n\n  for (var key in fragments) {\n    var currentChild = fragments[key];\n\n    if (currentChild) {\n      if (validChildrenCount === 0) firstKey = key;\n      newFragments[key] = currentChild;\n      validChildrenCount++;\n    }\n  }\n\n  if (validChildrenCount === 0) return undefined;\n  if (validChildrenCount === 1) return newFragments[firstKey];\n  return (0, _reactAddonsCreateFragment2.default)(newFragments);\n}\n\nfunction extendChildren(children, extendedProps, extendedChildren) {\n  return _react2.default.isValidElement(children) ? _react2.default.Children.map(children, function (child) {\n    var newProps = typeof extendedProps === 'function' ? extendedProps(child) : extendedProps;\n    var newChildren = typeof extendedChildren === 'function' ? extendedChildren(child) : extendedChildren ? extendedChildren : child.props.children;\n    return _react2.default.cloneElement(child, newProps, newChildren);\n  }) : children;\n}","map":null,"metadata":{},"sourceType":"script"}