{"ast":null,"code":"'use strict';\n\nvar luhn10 = require('./luhn-10');\n\nvar getCardTypes = require('credit-card-type');\n\nfunction verification(card, isPotentiallyValid, isValid) {\n  return {\n    card: card,\n    isPotentiallyValid: isPotentiallyValid,\n    isValid: isValid\n  };\n}\n\nfunction cardNumber(value, options) {\n  var potentialTypes, cardType, isPotentiallyValid, isValid, i, maxLength;\n  options = options || {};\n\n  if (typeof value === 'number') {\n    value = String(value);\n  }\n\n  if (typeof value !== 'string') {\n    return verification(null, false, false);\n  }\n\n  value = value.replace(/\\-|\\s/g, '');\n\n  if (!/^\\d*$/.test(value)) {\n    return verification(null, false, false);\n  }\n\n  potentialTypes = getCardTypes(value);\n\n  if (potentialTypes.length === 0) {\n    return verification(null, false, false);\n  } else if (potentialTypes.length !== 1) {\n    return verification(null, true, false);\n  }\n\n  cardType = potentialTypes[0];\n\n  if (options.maxLength && value.length > options.maxLength) {\n    return verification(cardType, false, false);\n  }\n\n  if (cardType.type === getCardTypes.types.UNIONPAY && options.luhnValidateUnionPay !== true) {\n    isValid = true;\n  } else {\n    isValid = luhn10(value);\n  }\n\n  maxLength = Math.max.apply(null, cardType.lengths);\n\n  if (options.maxLength) {\n    maxLength = Math.min(options.maxLength, maxLength);\n  }\n\n  for (i = 0; i < cardType.lengths.length; i++) {\n    if (cardType.lengths[i] === value.length) {\n      isPotentiallyValid = value.length < maxLength || isValid;\n      return verification(cardType, isPotentiallyValid, isValid);\n    }\n  }\n\n  return verification(cardType, value.length < maxLength, false);\n}\n\nmodule.exports = cardNumber;","map":null,"metadata":{},"sourceType":"script"}