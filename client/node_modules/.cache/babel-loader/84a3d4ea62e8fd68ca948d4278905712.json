{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _keycode = require('keycode');\n\nvar _keycode2 = _interopRequireDefault(_keycode);\n\nvar _formsyReact = require('formsy-react');\n\nvar _formsyReact2 = _interopRequireDefault(_formsyReact);\n\nvar _TextField = require('material-ui/TextField');\n\nvar _TextField2 = _interopRequireDefault(_TextField);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar FormsyText = _react2.default.createClass({\n  displayName: 'FormsyText',\n  propTypes: {\n    defaultValue: _react2.default.PropTypes.any,\n    name: _react2.default.PropTypes.string.isRequired,\n    onBlur: _react2.default.PropTypes.func,\n    onChange: _react2.default.PropTypes.func,\n    onFocus: _react2.default.PropTypes.func,\n    onKeyDown: _react2.default.PropTypes.func,\n    validationError: _react2.default.PropTypes.string,\n    validationErrors: _react2.default.PropTypes.object,\n    validations: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.object]),\n    value: _react2.default.PropTypes.any\n  },\n  mixins: [_formsyReact2.default.Mixin],\n  getInitialState: function getInitialState() {\n    return {\n      value: this.controlledValue()\n    };\n  },\n  componentWillMount: function componentWillMount() {\n    this.setValue(this.controlledValue());\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    var isValueChanging = nextProps.value !== this.props.value;\n\n    if (isValueChanging || nextProps.defaultValue !== this.props.defaultValue) {\n      var value = this.controlledValue(nextProps);\n\n      if (isValueChanging || this.props.defaultValue === this.getValue()) {\n        this.setState({\n          value: value\n        });\n        this.setValue(value);\n      }\n    }\n  },\n  componentWillUpdate: function componentWillUpdate(nextProps, nextState) {\n    if (nextState._isPristine && // eslint-disable-line no-underscore-dangle\n    nextState._isPristine !== this.state._isPristine) {\n      // eslint-disable-line no-underscore-dangle\n      // Calling state here is valid, as it cannot cause infinite recursion.\n      var value = this.controlledValue(nextProps);\n      this.setValue(value);\n      this.setState({\n        value: value\n      });\n    }\n  },\n  controlledValue: function controlledValue() {\n    var props = arguments.length <= 0 || arguments[0] === undefined ? this.props : arguments[0];\n    return props.value || props.defaultValue || '';\n  },\n  handleBlur: function handleBlur(event) {\n    this.setValue(event.currentTarget.value);\n    if (this.props.onBlur) this.props.onBlur(event);\n  },\n  handleChange: function handleChange(event) {\n    this.setState({\n      value: event.currentTarget.value\n    });\n    if (this.props.onChange) this.props.onChange(event);\n  },\n  handleKeyDown: function handleKeyDown(event) {\n    if ((0, _keycode2.default)(event) === 'enter') this.setValue(event.currentTarget.value);\n    if (this.props.onKeyDown) this.props.onKeyDown(event, event.currentTarget.value);\n  },\n  setMuiComponentAndMaybeFocus: _utils.setMuiComponentAndMaybeFocus,\n  render: function render() {\n    var _props = this.props;\n    var defaultValue = _props.defaultValue;\n    var // eslint-disable-line no-unused-vars\n    validations = _props.validations;\n    var // eslint-disable-line no-unused-vars\n    validationError = _props.validationError;\n    var // eslint-disable-line no-unused-vars\n    validationErrors = _props.validationErrors;\n    var // eslint-disable-line no-unused-vars\n    onFocus = _props.onFocus;\n    var value = _props.value;\n\n    var rest = _objectWithoutProperties(_props, ['defaultValue', 'validations', 'validationError', 'validationErrors', 'onFocus', 'value']);\n\n    return _react2.default.createElement(_TextField2.default, _extends({}, rest, {\n      errorText: this.getErrorMessage(),\n      onBlur: this.handleBlur,\n      onChange: this.handleChange,\n      onFocus: onFocus,\n      onKeyDown: this.handleKeyDown,\n      ref: this.setMuiComponentAndMaybeFocus,\n      value: this.state.value\n    }));\n  }\n});\n\nexports.default = FormsyText;","map":null,"metadata":{},"sourceType":"script"}